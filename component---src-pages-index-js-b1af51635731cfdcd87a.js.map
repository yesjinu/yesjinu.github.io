{"version":3,"file":"component---src-pages-index-js-b1af51635731cfdcd87a.js","mappings":"0MAuBA,EArBe,WACb,IAAMA,EAAc,CAClB,sDACA,yEACA,iEACA,kDACA,4EAGIC,EAAc,WAClB,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,SAAWF,EAAYK,QACtD,OAAOL,EAAYE,IAGrB,OACE,qBAAGI,UAAU,mBACX,gBAACL,EAAD,QC0CN,EA/CY,WAAO,IAAD,IACVM,GAAOC,EAAAA,EAAAA,gBAAe,cAgBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAU,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBE,IAAIC,OAE/C,OACE,gBAACC,EAAA,EAAD,CAAMT,UAAU,SACd,uBAAKA,UAAU,0CACb,gBAAC,EAAD,OAEF,uBAAKA,UAAU,gCACb,gBAAC,EAAAU,EAAD,CACEV,UAAU,oBACVW,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,+BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,qBAUA,2BACE,gBAAC,EAAAC,KAAD,CAAMlB,UAAU,4BAA4BmB,GAAIb,EAAYc,OAAO,UAChEjB,EAAOkB,MAEV,yBAAIlB,EAAOmB,c,iFCQrB,UAtDkB,SAAC,GAAwB,IAAD,EAArBrB,EAAqB,EAArBA,KAAMsB,EAAe,EAAfA,SACnBC,GAAY,UAAAvB,EAAKG,KAAKC,oBAAV,eAAwBoB,QAAxB,QACZC,EAAQzB,EAAK0B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAM3B,OAEN,gBAAC,IAAD,CAAQwB,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,kDAMJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAII,MAAO,CAAEC,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEnC,UAAU,iBACVqC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAApB,KAAD,CAAMC,GAAIa,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYd,KAG/B,6BAAQO,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/Bio/Quotes/index.js","webpack://gatsby-starter-blog/./src/components/Bio/index.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Quotes = () => {\n  const QUOTES_LIST = [\n    \"The best way to predict the future is to invent it.\",\n    \"The future belongs to those who believe in the beauty of their dreams.\",\n    \"The future is already here — it’s just not evenly distributed.\",\n    \"The future is not a gift, it is an achievement.\",\n    \"The future is not something we enter. The future is something we create.\",\n  ]\n\n  const RandomQuote = () => {\n    const random = Math.floor(Math.random() * QUOTES_LIST.length)\n    return QUOTES_LIST[random]\n  }\n\n  return (\n    <p className=\"text-3xl italic\">\n      <RandomQuote />\n    </p>\n  )\n}\n\nexport default Quotes\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Grid from \"../Layout/Grid\"\nimport Quotes from \"./Quotes\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          url {\n            resume\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author\n  const resumeLink = data.site.siteMetadata?.url.resume\n\n  return (\n    <Grid className=\"py-10\">\n      <div className=\"col-span-1 md:col-span-1 lg:col-span-2\">\n        <Quotes />\n      </div>\n      <div className=\"flex items-center col-span-1\">\n        <StaticImage\n          className=\"mr-4 rounded-full\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          src=\"../../images/profile-pic.png\"\n          width={50}\n          height={50}\n          quality={95}\n          alt=\"Profile picture\"\n        />\n        <div>\n          <Link className=\"hover:underline font-bold\" to={resumeLink} target=\"_blank\">\n            {author.name}\n          </Link>\n          <p>{author.summary}</p>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>No blog posts found.</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["QUOTES_LIST","RandomQuote","random","Math","floor","length","className","data","useStaticQuery","author","site","siteMetadata","resumeLink","url","resume","Grid","S","layout","formats","src","width","height","quality","alt","Link","to","target","name","summary","location","siteTitle","title","posts","allMarkdownRemark","nodes","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}